1. Find employees whose name start with E.
-->db.employee.find({ ENAME : /^E/ })

2. Find employees whose name ends with n.
-->db.employee.find({ ENAME: /n$/ })


3. Find employees whose name starts with S or M in your collection.
-->db.employee.find({ ENAME: /^[SM]/ })


4. Find employees where city starts with A to M in your collection.
-->db.employee.find({ CITY: /^[A-M]/ })


5. Find employees where city name ends in ‘ney’.
-->db.employee.find({ CITY: /ney$/ })


6. Display employee info whose name contains n. (Both uppercase(N) and lowercase(n))
-->db.employee.find({ ENAME: /n/i })


7. Display employee info whose name starts with E and having 5 characters.
-->db.employee.find({ ENAME: /^E.{4}$/ })


8. Display employee whose name start with S and ends in a.
-->db.employee.find({ ENAME: /^S.*a$/ })


9. Display EID, ENAME, CITY and SALARY whose name starts with ‘Phi’.
-->db.employee.find(
    { ENAME: /^Phi/ },
    { EID: 1, ENAME: 1, CITY: 1, SALARY: 1, _id: 0 }


10. Display ENAME, JOININGDATE and CITY whose city contains ‘dne’ as three letters in city name.
-->db.employee.find(
    { CITY: /dne/ },
    { ENAME: 1, JOININGDATE: 1, CITY: 1, _id: 0 }


11. Display ENAME, JOININGDATE and CITY who does not belongs to city London or Sydney.
-->db.employee.find(
    { CITY: { $nin: ["London", "Sydney"] } },
    { ENAME: 1, JOININGDATE: 1, CITY: 1, _id: 0 }


12. Find employees whose names start with 'J'.
-->db.employee.find({ ENAME: /^J/ })


13. Find employees whose names end with 'y'.
-->db.employee.find({ ENAME: /y$/ })


14. Find employees whose names contain the letter 'a'.
-->db.employee.find({ ENAME: /a/ })


15. Find employees whose names contain either 'a' or 'e'.
-->db.employee.find({ ENAME: /[ae]/i })


16. Find employees whose names start with 'J' and end with 'n'.
-->db.employee.find({ ENAME: /^J.*n$/ })


17. Find employees whose CITY starts with 'New'.
-->db.employee.find({ CITY: /^New/ })


18. Find employees whose CITY does not start with 'L'
-->db.employee.find({ CITY: { $not: /^L/ } })


19. Find employees whose CITY contains the word 'York'.
-->db.employee.find({ CITY: /York/ })


20. Find employees whose names have two consecutive vowels (a, e, i, o, u).
-->db.employee.find({ ENAME: /[aeiou]{2}/i })


21. Find employees whose names have three or more letters.
-->db.employee.find({ ENAME: /^.{3,}$/ })


22. Find employees whose names have exactly 4 letters.
-->db.employee.find({ ENAME: /^.{4}$/ })


23. Find employees whose names start with either 'S' or 'M'.
-->db.employee.find({ ENAME: /^[SM]/ })


24. Find employees whose names contain 'il' anywhere.
-->db.employee.find({ ENAME: /il/ })


25. Find employees whose names do not contain 'a'.
-->db.employee.find({ ENAME: { $not: /a/ } })


26. Find employees whose names contain any digit.
-->db.employee.find({ ENAME: /\d/ })


27. Find employees whose names contain exactly one vowel.
-->db.employee.find({ ENAME: /^[^aeiou]*[aeiou][^aeiou]*$/i })


28. Find employees whose names start with any uppercase letter followed by any lowercase letter
-->db.employee.find({ ENAME: /^[A-Z][a-z]/ })


------------------------------PART-B--------------------------------------------
1. Display documents where sname start with K.
-->db.Student.find({ SNAME: /^K/ })

2. Display documents where sname starts with Z or D.
-->db.Student.find({ SNAME: { $regex: "^(Z|D)" } })

3. Display documents where city starts with A to R.
-->db.Student.find({ CITY: { $regex: "^[A-R]" } })

4. Display students’ info whose name start with P and ends with i.
-->db.Student.find({ SNAME: /^P.*i$/ })

5. Display students’ info whose department name starts with ‘C’.
-->db.Student.find({ DEPARTMENT: /^C/ })

6. Display name, sem, fees, and department whose city contains ‘med’ as three letters somewhere in city
name.
-->db.Student.find(
  { CITY: /med/ },
  { SNAME: 1, SEM: 1, FEES: 1, DEPARTMENT: 1, _id: 0 }
)

7. Display name, sem, fees, and department who does not belongs to city Rajkot or Baroda.
-->db.Student.find(
  { CITY: { $nin: ["Rajkot", "Baroda"] } },
  { SNAME: 1, SEM: 1, FEES: 1, DEPARTMENT: 1, _id: 0 }
)

8. Find students whose names start with 'K' and are followed by any character.
-->db.Student.find({ SNAME: /^K./ })

9. Find students whose names end with 'a'.
-->db.Student.find({ SNAME: /a$/ })

10. Find students whose names contain 'ri'. (case-insensitive)
-->db.Student.find({ SNAME: { $regex: "ri", $options: "i" } })


-----------------------PART-C-----------------------------

1. Find students whose names start with a vowel (A, E, I, O, U).
-->db.Student.find({ SNAME: { $regex: "^[AEIOUaeiou]" } })-----------------

2. Find students whose CITY ends with 'pur' or 'bad'.
-->db.Student.find({ CITY: { $regex: "(pur|bad)$" } })

3. Find students whose FEES starts with '1'.
-->db.Student.find({ FEES: { $regex: "^1" } })-----------------

4. Find students whose SNAME starts with 'K' or 'V'.
-->db.Student.find({ SNAME: { $regex: "^(K|V)" } })


5. Find students whose CITY contains exactly five characters.
-->db.Student.find({ CITY: { $regex: "^.{5}$" } })-------------------

6. Find students whose names do not contain the letter 'e'.
-->db.Student.find({ SNAME: { $not: /e/ } })

7. Find students whose CITY starts with 'Ra' and ends with 'ot'.
-->db.Student.find({ CITY: { $regex: "^Ra.*ot$" } })

8. Find students whose names contain exactly one vowel.
-->db.Student.find({ SNAME: { $regex: "^[^aeiouAEIOU]*[aeiouAEIOU][^aeiouAEIOU]*$" } })

9. Find students whose names start and end with the same letter.
-->db.Student.find({ SNAME: { $regex: "^(.).*\\1$" } })-----------------------------

10. Find students whose DEPARTMENT starts with either 'C' or 'E'.
-->db.Student.find({ DEPARTMENT: { $regex: "^(C|E)" } })

11. Find students whose SNAME has exactly 5 characters.
-->db.Student.find({ SNAME: { $regex: "^.{5}$" } })	

12. Find students whose GENDER is Female and CITY starts with 'A'.
-->db.Student.find({ GENDER: "Female", CITY: { $regex: "^A" } })

